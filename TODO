= TODO =

This is a list of TODOs for this package.  At the end of the file, TODOs are
auto-extracted from source using bin/update-todo.sh

== Bugs ==

== Improvements ==

    * Stick the definition-via-url logic into the pipeline class itself.
       * Allow sub-pipelines to be pulled in via URL as well.
    * Enforce required parameters in pipeline definition, and in URL params
    * Use Services_JSON when json_encode / json_decode not available?
    * Explore more functional bits 
        * ie. a module that accepts POSTs and shortcircuits the whole pipeline.
            * write-able feeds.
    * Cacher / Fetcher
        * Obey and produce HTTP caching semantics
        * Store and use ETag and Last-Modified in Fetcher
    * Options for Fetcher / XSLFilter / Pipeline to pull only from local files.
    * Pipeline parameters
        * Spec
            * id
            * type
            * required
            * default
            * label
        * Types
            * string
            * url
            * url-encoded
            * int
            * boolean
            * enum
            * json / user defined

== Wishlist ==

    * Builder
        * An AJAXified builder app that uses module metadata to piece togther pipelines.
    * Modules
        * External Pipeline
            * POST feed data to a URL, accept response body as output.
            * Conversely, given a certain switch parameter, accept POST data and respond with feed data.
            * Pluggable variant of Fetcher?  Rather than fetching, it accepts POSTed data.
            * Pure pipeline, no local storage of data.
        * Feed Header Munger
            * Replace the feed title / link / description / etc with parameters
        * Regex Filter
            * Specify a negative/positive regex criteria on CDATA of an arbitrary item element
        * Sorter
            * Sort feed items by an element's contents
        * Limiter
            * Limit feed to an arbitrary number of items
        * Auto-tagger
            * Auto add dc:subject and/or category tags based on certain patterns
        * Normalize/Repair
            * Use Magpie to liberally parse broken feed, rebuild into working feed
        * From hAtom
            * Render any feed as hAtom
        * To hAtom
            * Turn hAtom into Atom.
        * Stretcher
            * Keep a local cache of feed items, keep them in the feed longer than original
            * Good for piling up items from a single entry feed
        * Item Inbox
            * Simple POST interface to add items to a feed, stored locally in small file buffer
               * Good for logging, simple status updates
            * Possibly offer Atom Publishing Protocol compliance
            * Possibly accept posts from mailhook.org
            * Should be passworded / keyed
        * Favicon Sprinkler
            * For blended feeds, drop in an img ref to the original site's favicon
        * Blank
            * Start with a blank RSS or Atom feed
            * Pair with Feed Header Munger and Blender to make a feed from scratch almost

== Blue Sky ==

== Extracted ==

./lib/FeedMagick2/BasePipeModule.php:68:     * @todo Find a more efficient way to do this.
./lib/FeedMagick2/BasePipeModule.php:156:     * @todo Honor GET parameters here?
./lib/FeedMagick2/BasePipeModule.php:162:            /** @todo Honor GET parameters here. */
./lib/FeedMagick2/Pipeline.php:15: * @todo Methods to prepend or append pipe modules, post-construction
./lib/FeedMagick2.php:33:     * @todo Try to replace Services_JSON with the PHP binary extension, but not working on my laptop.
./lib/FeedMagick2.php:73:     * @todo Allow modules to register aliases, ie. FeedMagic2_Pipeline => Pipeline
./lib/FeedMagick2.php:121:     * @todo Do some more verification of available modules.
./lib/FeedMagick2.php:122:     * @todo Wrap module loading in a try/catch and report bum modules.
./lib/FeedMagick2.php:123:     * @todo Find a way to autoload these?
./lib/FeedMagick2.php:147:     * @todo Figure out if any file system based headers make sense here. (modified, etc)
./lib/FeedMagick2.php:174:     * @todo Carry headers along as a property of this object?
./lib/FeedMagick2.php:175:     * @todo Need better error handling here.
./modules/BadgerFishJSON.php:43:     * @todo Whitelist the callback character set in BasePipeModule with an option slot modifier.
./modules/Blender.php:18: * @todo Auto-convert sub-module feeds into format of input feed?
./modules/Cacher.php:32:     * @todo Find a better way to calculate cache key
./modules/Cacher.php:33:     * @todo Use cache grouping?
./modules/Fetcher.php:16: * @todo Honor more HTTP caching mechanics.
./modules/Fetcher.php:17: * @todo Do some local disk-based caching.
./modules/Fetcher.php:39:     * @todo Implement some HTTP-aware caching here.
./modules/MagpieJSON.php:42:     * @todo Whitelist the callback character set in BasePipeModule with an option slot modifier.
./modules/XSLFilter.php:36:     * @todo Need to accept arbitrary parameters for XSL.
./bin/update-todo.sh:2:# TODO: Make this suck less.
./lib/FeedMagick2/XMLGeneratorFilter.php:46:        // TODO: Need to build a proper XML declaration here with respect to encoding, charset
./lib/FeedMagick2/XMLGeneratorFilter.php:70:        // TODO: Not sure about the parameters of namespace end handler.
./modules/Fetcher.php:33:            'headers_whitelist' => 0 // TODO: Need to define these constants.
./xsl/ficlets-extended.xsl:64:                            <!-- TODO: Could find the date, but would need to spider another page level deep -->
./xsl/ficlets-extended.xsl:79:                            <!-- TODO: Could find the date, but would need to spider another page level deep -->
./xsl/normalizer.xsl:85:            <!-- TODO: Handle unescaping escaped entities and such from RSS -->
./xsl/scrapers/lib/atom030.xsl:84:      <!-- TODO: Need an entry modified date, which is a problem without persistent data -->
./xsl/scrapers/lib/atom030.xsl:86:      <!-- TODO: Need an entry issued date, which is a problem without persistent data -->
./xsl/scrapers/lib/atom100.xsl:84:      <!-- TODO: Need an entry modified date, which is a problem without persistent data -->
./xsl/scrapers/lib/atom100.xsl:86:      <!-- TODO: Need an entry issued date, which is a problem without persistent data -->
./xsl/scrapers/lib/escape-html.xsl:43:  <!-- TODO: This double-replace call seems really smelly. -->
